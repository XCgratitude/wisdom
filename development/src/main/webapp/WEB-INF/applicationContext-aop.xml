<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
       default-lazy-init="true">


    <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>

    <!-- Activates scanning of @Service -->
    <context:component-scan base-package="com.wisdom.**.service"/>
    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="common"/>
    </bean>
    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven/>

    <!-- 开启AOP监听 只对当前配置文件有效 -->
    <aop:aspectj-autoproxy expose-proxy="true"/>


    <!-- 开启注解事务 只对当前配置文件有效 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- jta事务管理 read-only没起作用须要测试-->
    <!-- 应为事务传播特性无效 取消掉read-only方法拦截 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--记账的事务单独开启-->
            <tx:method name="list*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="accounting" propagation="REQUIRES_NEW" read-only="false" rollback-for="BusinessException"/>
            <tx:method name="order" propagation="REQUIRES_NEW" read-only="false" rollback-for="BusinessException" />
            <tx:method name="proxyPay" propagation="REQUIRES_NEW" read-only="false" rollback-for="BusinessException" />
            <tx:method name="*" propagation="REQUIRED" read-only="false" rollback-for="BusinessException"/>
        </tx:attributes>
    </tx:advice>

    <aop:config expose-proxy="true">
        <!-- 只对业务逻辑层实施事务,并处理基类里面的service -->
        <aop:pointcut id="txPointcut" expression="execution(* com.wisdom..*.service.*.*(..))"/>
        <aop:advisor order="10" advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>


</beans>
